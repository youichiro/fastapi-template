name: workflow
on: push
jobs:
  actionlint:
    runs-on: ubuntu-latest
    timeout-minutes: 300
    steps:
      - name: Chekout
        uses: actions/checkout@v3
      - name: Install actionlint
        shell: bash
        run: bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
      - name: Run actionlint
        shell: bash
        run: ./actionlint -color
  lint:
    runs-on: ubuntu-latest
    needs: actionlint
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        run: poetry install --only main,dev --no-root --no-interaction
      - name: Run isort
        run: poetry run isort --check .
      - name: Run black
        run: poetry run black --check .
      - name: Run flake8
        run: poetry run flake8 .
      - name: Run mypy
        run: poetry run mypy .
  test:
    runs-on: ubuntu-latest
    needs: actionlint
    env:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: cale
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: cale_test
      MYSQL_HOST: 127.0.0.1
      MYSQL_PORT: 3306
      MYSQL_TEST_DATABASE: cale_test
    services:
      mysql:
        image: mysql:8.0.22
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: cale
          MYSQL_PASSWORD: password
          MYSQL_DATABASE: cale_test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Python
        uses: ./.github/actions/setup-python
      - name: Install Dependencies
        run: poetry install --only main,test --no-root --no-interaction
      - name: Setup Development Database
        run: make setup_development_db
      - name: Setup Test Database
        run: make setup_test_db
      - name: Run pytest
        run: poetry run pytest --cov --cov-report term-missing -n 2
